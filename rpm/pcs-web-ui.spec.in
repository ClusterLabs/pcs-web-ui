%global commits_ahead_tag @commits_ahead_tag@
%global current_commit @current_commit@
%global dirty @dirty@
%global cibranch @cibranch@
%global src_suffix %{version}%{?commits_ahead_tag:+%{commits_ahead_tag}}%{?current_commit:-%{current_commit}}%{?dirty:-%{dirty}}

Name: pcs-web-ui
Version: @version@
Release: 99+git%{?commits_ahead_tag:.%{commits_ahead_tag}}%{?current_commit:.%{current_commit}}%{?dirty:.%{dirty}}%{?cibranch:.%{cibranch}}%{?dist}
Summary: Web interface for pcs

License: GPL
URL: https://github.com/ClusterLabs/pcs-web-ui
Source0: %{name}-%{src_suffix}.tar.gz
Source1: %{name}-node-modules-%{src_suffix}.tar.xz

BuildRequires: make
BuildRequires: npm

%description
pcs-web-ui is web interface for pcs, which is a corosync and pacemaker
configuration tool. It permits users to easily view, modify and create
pacemaker based clusters.

%prep
# documentation for setup/autosetup/autopatch:
#   * http://ftp.rpm.org/max-rpm/s1-rpm-inside-macros.html
#   * https://rpm-software-management.github.io/rpm/manual/autosetup.html
# -n <name> — Set Name of Build Directory
# -T — Do Not Perform Default Archive Unpacking
# -b <n> — Unpack The nth Sources Before Changing Directory
# -a <n> — Unpack The nth Sources After Changing Directory
#
# 1. unpack sources (-b 0)
# 2. then cd into sources tree (the setup macro itself)
# 3. then unpack node_modules into sources tree (-a 1).
%setup -T -b 0 -a 1 -n %{name}-%{src_suffix}

%build
# Don't want to generate debug files
%define debug_package %{nil}
./autogen.sh
%{configure} @configure-flags@
make all

%install
%make_install DESTDIR=%{buildroot}

%files
%license COPYING
@pcsd-webui-dir@/*
@cockpit-dir@/*

%changelog
* @date@ Autotools generated version <nobody@nowhere.org> - @version@-1+@commits_ahead_tag@.@current_commit@.@dirty@
- Autotools generated version
- These aren't the droids you're looking for.
